%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (Copyright 1995-2003 J.Ph Chancelier Enpc/cermics)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%scipos_w=3000
%scipos_h=2120
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
/WhiteLev 31 def
/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
%Latex:\setlength{\unitlength}{0.05pt}
%Latex:\begin{picture}(6000,4240)(200,0)
/background 33 def PaintBackground
/background 33 def PaintBackground
/background 33 def PaintBackground
32 Setcolor
5 Thickness
[] 0 setdash
32 Setcolor
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
32 Setcolor
(0.0) 688 3869 0  0.00 [688 3774 125 94] Show
%Latex:\myput{688}{371}{5}{0.0}
 (drawsegs) 4 [ 32]
[750 3710 750 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[1200 3710 1200 3741 
] dogrey 
(0.1) 1588 3869 0  0.00 [1588 3774 125 94] Show
%Latex:\myput{1588}{371}{5}{0.1}
 (drawsegs) 4 [ 32]
[1650 3710 1650 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[2100 3710 2100 3741 
] dogrey 
(0.2) 2488 3869 0  0.00 [2488 3774 125 94] Show
%Latex:\myput{2488}{371}{5}{0.2}
 (drawsegs) 4 [ 32]
[2550 3710 2550 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[3000 3710 3000 3741 
] dogrey 
(0.3) 3388 3869 0  0.00 [3388 3774 125 94] Show
%Latex:\myput{3388}{371}{5}{0.3}
 (drawsegs) 4 [ 32]
[3450 3710 3450 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[3900 3710 3900 3741 
] dogrey 
(0.4) 4288 3869 0  0.00 [4288 3774 125 94] Show
%Latex:\myput{4288}{371}{5}{0.4}
 (drawsegs) 4 [ 32]
[4350 3710 4350 3773 
] dogrey 
 (drawsegs) 4 [ 32]
[4800 3710 4800 3741 
] dogrey 
(0.5) 5188 3869 0  0.00 [5188 3774 125 94] Show
%Latex:\myput{5188}{371}{5}{0.5}
 (drawsegs) 4 [ 32]
[5250 3710 5250 3773 
] dogrey 
(0) 628 3746 0  0.00 [628 3651 50 94] Show
%Latex:\myput{628}{494}{5}{0}
 (drawsegs) 4 [ 32]
[750 3710 690 3710 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3511 720 3511 
] dogrey 
(20) 578 3349 0  0.00 [578 3254 100 94] Show
%Latex:\myput{578}{891}{5}{20}
 (drawsegs) 4 [ 32]
[750 3313 690 3313 
] dogrey 
 (drawsegs) 4 [ 32]
[750 3114 720 3114 
] dogrey 
(40) 578 2951 0  0.00 [578 2856 100 94] Show
%Latex:\myput{578}{1289}{5}{40}
 (drawsegs) 4 [ 32]
[750 2915 690 2915 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2716 720 2716 
] dogrey 
(60) 578 2554 0  0.00 [578 2459 100 94] Show
%Latex:\myput{578}{1686}{5}{60}
 (drawsegs) 4 [ 32]
[750 2518 690 2518 
] dogrey 
 (drawsegs) 4 [ 32]
[750 2319 720 2319 
] dogrey 
(80) 578 2156 0  0.00 [578 2061 100 94] Show
%Latex:\myput{578}{2084}{5}{80}
 (drawsegs) 4 [ 32]
[750 2120 690 2120 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1921 720 1921 
] dogrey 
(100) 528 1759 0  0.00 [528 1664 150 94] Show
%Latex:\myput{528}{2481}{5}{100}
 (drawsegs) 4 [ 32]
[750 1723 690 1723 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1524 720 1524 
] dogrey 
(120) 528 1361 0  0.00 [528 1266 150 94] Show
%Latex:\myput{528}{2879}{5}{120}
 (drawsegs) 4 [ 32]
[750 1325 690 1325 
] dogrey 
 (drawsegs) 4 [ 32]
[750 1126 720 1126 
] dogrey 
(140) 528 964 0  0.00 [528 869 150 94] Show
%Latex:\myput{528}{3276}{5}{140}
 (drawsegs) 4 [ 32]
[750 928 690 928 
] dogrey 
 (drawsegs) 4 [ 32]
[750 729 720 729 
] dogrey 
(160) 528 566 0  0.00 [528 471 150 94] Show
%Latex:\myput{528}{3674}{5}{160}
 (drawsegs) 4 [ 32]
[750 530 690 530 
] dogrey 
[] 0 setdash
32 Setcolor
0 Setcolor
5 Thickness
[] 0 setdash
750 530 4500 3180 setclipzone
/closeflag false def
 (drawpoly) 200 [ 0]
[750 697 795 704 841 722 886 752 932 789 977 831 1023 874 1068 916 1114 954 1159 985 
1205 1008 1250 1021 1295 1025 1341 1018 1386 1000 1432 972 1477 935 1523 891 1568 841 1614 788 
1659 734 1705 682 1750 631 1795 585 1841 549 1886 546 1932 633 1977 894 2023 1353 2068 1899 
2114 2388 2159 2763 2205 3033 2250 3222 2295 3356 2341 3451 2386 3519 2432 3569 2477 3606 2523 3633 
2568 3653 2614 3668 2659 3680 2705 3688 2750 3695 2795 3700 2841 3703 2886 3706 2932 3708 2977 3709 
3023 3710 3068 3709 3114 3708 3159 3708 3205 3708 3250 3708 3295 3708 3341 3708 3386 3708 3432 3708 
3477 3709 3523 3709 3568 3709 3614 3709 3659 3710 3705 3710 3750 3710 3795 3710 3841 3710 3886 3710 
3932 3709 3977 3709 4023 3709 4068 3709 4114 3709 4159 3709 4205 3709 4250 3709 4295 3709 4341 3709 
4386 3709 4432 3709 4477 3709 4523 3709 4568 3709 4614 3709 4659 3709 4705 3709 4750 3709 4795 3709 
4841 3709 4886 3709 4932 3709 4977 3709 5023 3710 5068 3710 5114 3710 5159 3710 5205 3710 5250 3710 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
/Courier findfont 100 scf mul scalefont setfont
32 Setcolor
/Courier findfont 100 scf mul scalefont setfont
(frequenza) 5355 3737 0  0.00 [5355 3637 540 100] Show
%Latex:\myput{5355}{503}{5}{frequenza}
32 Setcolor
/Courier findfont 100 scf mul scalefont setfont
(|H\(w\)|) 570 292 0  0.00 [570 192 360 100] Show
%Latex:\myput{570}{3948}{5}{|H(w)|}
2 Setcolor
5 Thickness
[50 30 20 30 ] 0 setdash
750 530 4500 3180 setclipzone
/closeflag false def
 (drawpoly) 302 [ 0]
[1875 3710 1875 3690 1875 3670 1875 3650 1875 3631 1875 3611 1875 3591 1875 3571 1875 3551 1875 3531 
1875 3511 1875 3491 1875 3472 1875 3452 1875 3432 1875 3412 1875 3392 1875 3372 1875 3352 1875 3332 
1875 3313 1875 3293 1875 3273 1875 3253 1875 3233 1875 3213 1875 3193 1875 3173 1875 3154 1875 3134 
1875 3114 1875 3094 1875 3074 1875 3054 1875 3034 1875 3014 1875 2995 1875 2975 1875 2955 1875 2935 
1875 2915 1875 2895 1875 2875 1875 2855 1875 2836 1875 2816 1875 2796 1875 2776 1875 2756 1875 2736 
1875 2716 1875 2696 1875 2677 1875 2657 1875 2637 1875 2617 1875 2597 1875 2577 1875 2557 1875 2537 
1875 2518 1875 2498 1875 2478 1875 2458 1875 2438 1875 2418 1875 2398 1875 2378 1875 2359 1875 2339 
1875 2319 1875 2299 1875 2279 1875 2259 1875 2239 1875 2219 1875 2200 1875 2180 1875 2160 1875 2140 
1875 2120 1875 2100 1875 2080 1875 2060 1875 2041 1875 2021 1875 2001 1875 1981 1875 1961 1875 1941 
1875 1921 1875 1901 1875 1882 1875 1862 1875 1842 1875 1822 1875 1802 1875 1782 1875 1762 1875 1742 
1875 1723 1875 1703 1875 1683 1875 1663 1875 1643 1875 1623 1875 1603 1875 1583 1875 1564 1875 1544 
1875 1524 1875 1504 1875 1484 1875 1464 1875 1444 1875 1424 1875 1405 1875 1385 1875 1365 1875 1345 
1875 1325 1875 1305 1875 1285 1875 1265 1875 1246 1875 1226 1875 1206 1875 1186 1875 1166 1875 1146 
1875 1126 1875 1106 1875 1087 1875 1067 1875 1047 1875 1027 1875 1007 1875 987 1875 967 1875 947 
1875 928 1875 908 1875 888 1875 868 1875 848 1875 828 1875 808 1875 788 1875 769 1875 749 
1875 729 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
/Courier findfont 100 scf mul scalefont setfont
[] 0 setdash
32 Setcolor
32 Setcolor
(frequenza di taglio) 3450 4227 0  0.00 [3450 4127 1140 100] Show
%Latex:\myput{3450}{13}{5}{frequenza di taglio}
32 Setcolor
[] 0 setdash
2 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3000 4190 3375 4190 
] dogrey 
2 Setcolor
/absolu true def
[] 0 setdash
32 Setcolor
[50 30 20 30 ] 0 setdash
2 Setcolor
4 Setcolor
5 Thickness
[50 30 20 30 ] 0 setdash
750 530 4500 3180 setclipzone
/closeflag false def
 (drawpoly) 302 [ 0]
[3000 3710 3000 3690 3000 3670 3000 3650 3000 3631 3000 3611 3000 3591 3000 3571 3000 3551 3000 3531 
3000 3511 3000 3491 3000 3472 3000 3452 3000 3432 3000 3412 3000 3392 3000 3372 3000 3352 3000 3332 
3000 3313 3000 3293 3000 3273 3000 3253 3000 3233 3000 3213 3000 3193 3000 3173 3000 3154 3000 3134 
3000 3114 3000 3094 3000 3074 3000 3054 3000 3034 3000 3014 3000 2995 3000 2975 3000 2955 3000 2935 
3000 2915 3000 2895 3000 2875 3000 2855 3000 2836 3000 2816 3000 2796 3000 2776 3000 2756 3000 2736 
3000 2716 3000 2696 3000 2677 3000 2657 3000 2637 3000 2617 3000 2597 3000 2577 3000 2557 3000 2537 
3000 2518 3000 2498 3000 2478 3000 2458 3000 2438 3000 2418 3000 2398 3000 2378 3000 2359 3000 2339 
3000 2319 3000 2299 3000 2279 3000 2259 3000 2239 3000 2219 3000 2200 3000 2180 3000 2160 3000 2140 
3000 2120 3000 2100 3000 2080 3000 2060 3000 2041 3000 2021 3000 2001 3000 1981 3000 1961 3000 1941 
3000 1921 3000 1901 3000 1882 3000 1862 3000 1842 3000 1822 3000 1802 3000 1782 3000 1762 3000 1742 
3000 1723 3000 1703 3000 1683 3000 1663 3000 1643 3000 1623 3000 1603 3000 1583 3000 1564 3000 1544 
3000 1524 3000 1504 3000 1484 3000 1464 3000 1444 3000 1424 3000 1405 3000 1385 3000 1365 3000 1345 
3000 1325 3000 1305 3000 1285 3000 1265 3000 1246 3000 1226 3000 1206 3000 1186 3000 1166 3000 1146 
3000 1126 3000 1106 3000 1087 3000 1067 3000 1047 3000 1027 3000 1007 3000 987 3000 967 3000 947 
3000 928 3000 908 3000 888 3000 868 3000 848 3000 828 3000 808 3000 788 3000 769 3000 749 
3000 729 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
0 Setcolor
5 Thickness
[50 30 20 30 ] 0 setdash
750 530 4500 3180 setclipzone
/closeflag false def
 (drawpoly) 200 [ 0]
[750 697 795 704 841 722 886 752 932 789 977 831 1023 874 1068 916 1114 954 1159 985 
1205 1008 1250 1021 1295 1025 1341 1018 1386 1000 1432 972 1477 935 1523 891 1568 841 1614 788 
1659 734 1705 682 1750 631 1795 585 1841 549 1886 546 1932 633 1977 894 2023 1353 2068 1899 
2114 2388 2159 2763 2205 3033 2250 3222 2295 3356 2341 3451 2386 3519 2432 3569 2477 3606 2523 3633 
2568 3653 2614 3668 2659 3680 2705 3688 2750 3695 2795 3700 2841 3703 2886 3706 2932 3708 2977 3709 
3023 3710 3068 3709 3114 3708 3159 3708 3205 3708 3250 3708 3295 3708 3341 3708 3386 3708 3432 3708 
3477 3709 3523 3709 3568 3709 3614 3709 3659 3710 3705 3710 3750 3710 3795 3710 3841 3710 3886 3710 
3932 3709 3977 3709 4023 3709 4068 3709 4114 3709 4159 3709 4205 3709 4250 3709 4295 3709 4341 3709 
4386 3709 4432 3709 4477 3709 4523 3709 4568 3709 4614 3709 4659 3709 4705 3709 4750 3709 4795 3709 
4841 3709 4886 3709 4932 3709 4977 3709 5023 3710 5068 3710 5114 3710 5159 3710 5205 3710 5250 3710 
] dogrey 
0 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
/Courier findfont 100 scf mul scalefont setfont
32 Setcolor
/Courier findfont 100 scf mul scalefont setfont
(frequenza) 5355 3737 0  0.00 [5355 3637 540 100] Show
%Latex:\myput{5355}{503}{5}{frequenza}
32 Setcolor
/Courier findfont 100 scf mul scalefont setfont
(|H\(w\)|) 570 292 0  0.00 [570 192 360 100] Show
%Latex:\myput{570}{3948}{5}{|H(w)|}
2 Setcolor
5 Thickness
[50 30 20 30 ] 0 setdash
750 530 4500 3180 setclipzone
/closeflag false def
 (drawpoly) 322 [ 0]
[1875 3710 1875 3690 1875 3670 1875 3650 1875 3631 1875 3611 1875 3591 1875 3571 1875 3551 1875 3531 
1875 3511 1875 3491 1875 3472 1875 3452 1875 3432 1875 3412 1875 3392 1875 3372 1875 3352 1875 3332 
1875 3313 1875 3293 1875 3273 1875 3253 1875 3233 1875 3213 1875 3193 1875 3173 1875 3154 1875 3134 
1875 3114 1875 3094 1875 3074 1875 3054 1875 3034 1875 3014 1875 2995 1875 2975 1875 2955 1875 2935 
1875 2915 1875 2895 1875 2875 1875 2855 1875 2836 1875 2816 1875 2796 1875 2776 1875 2756 1875 2736 
1875 2716 1875 2696 1875 2677 1875 2657 1875 2637 1875 2617 1875 2597 1875 2577 1875 2557 1875 2537 
1875 2518 1875 2498 1875 2478 1875 2458 1875 2438 1875 2418 1875 2398 1875 2378 1875 2359 1875 2339 
1875 2319 1875 2299 1875 2279 1875 2259 1875 2239 1875 2219 1875 2200 1875 2180 1875 2160 1875 2140 
1875 2120 1875 2100 1875 2080 1875 2060 1875 2041 1875 2021 1875 2001 1875 1981 1875 1961 1875 1941 
1875 1921 1875 1901 1875 1882 1875 1862 1875 1842 1875 1822 1875 1802 1875 1782 1875 1762 1875 1742 
1875 1723 1875 1703 1875 1683 1875 1663 1875 1643 1875 1623 1875 1603 1875 1583 1875 1564 1875 1544 
1875 1524 1875 1504 1875 1484 1875 1464 1875 1444 1875 1424 1875 1405 1875 1385 1875 1365 1875 1345 
1875 1325 1875 1305 1875 1285 1875 1265 1875 1246 1875 1226 1875 1206 1875 1186 1875 1166 1875 1146 
1875 1126 1875 1106 1875 1087 1875 1067 1875 1047 1875 1027 1875 1007 1875 987 1875 967 1875 947 
1875 928 1875 908 1875 888 1875 868 1875 848 1875 828 1875 808 1875 788 1875 769 1875 749 
1875 729 1875 709 1875 689 1875 669 1875 649 1875 629 1875 610 1875 590 1875 570 1875 550 
1875 530 
] dogrey 
2 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
32 Setcolor
/Courier findfont 100 scf mul scalefont setfont
[] 0 setdash
32 Setcolor
32 Setcolor
(frequenza di taglio) 3450 4227 0  0.00 [3450 4127 1140 100] Show
%Latex:\myput{3450}{13}{5}{frequenza di taglio}
32 Setcolor
[] 0 setdash
2 Setcolor
/closeflag false def
 (drawpoly) 4 [ 0]
[3000 4190 3375 4190 
] dogrey 
2 Setcolor
/absolu true def
[] 0 setdash
32 Setcolor
[50 30 20 30 ] 0 setdash
2 Setcolor
4 Setcolor
5 Thickness
[50 30 20 30 ] 0 setdash
750 530 4500 3180 setclipzone
/closeflag false def
 (drawpoly) 322 [ 0]
[3000 3710 3000 3690 3000 3670 3000 3650 3000 3631 3000 3611 3000 3591 3000 3571 3000 3551 3000 3531 
3000 3511 3000 3491 3000 3472 3000 3452 3000 3432 3000 3412 3000 3392 3000 3372 3000 3352 3000 3332 
3000 3313 3000 3293 3000 3273 3000 3253 3000 3233 3000 3213 3000 3193 3000 3173 3000 3154 3000 3134 
3000 3114 3000 3094 3000 3074 3000 3054 3000 3034 3000 3014 3000 2995 3000 2975 3000 2955 3000 2935 
3000 2915 3000 2895 3000 2875 3000 2855 3000 2836 3000 2816 3000 2796 3000 2776 3000 2756 3000 2736 
3000 2716 3000 2696 3000 2677 3000 2657 3000 2637 3000 2617 3000 2597 3000 2577 3000 2557 3000 2537 
3000 2518 3000 2498 3000 2478 3000 2458 3000 2438 3000 2418 3000 2398 3000 2378 3000 2359 3000 2339 
3000 2319 3000 2299 3000 2279 3000 2259 3000 2239 3000 2219 3000 2200 3000 2180 3000 2160 3000 2140 
3000 2120 3000 2100 3000 2080 3000 2060 3000 2041 3000 2021 3000 2001 3000 1981 3000 1961 3000 1941 
3000 1921 3000 1901 3000 1882 3000 1862 3000 1842 3000 1822 3000 1802 3000 1782 3000 1762 3000 1742 
3000 1723 3000 1703 3000 1683 3000 1663 3000 1643 3000 1623 3000 1603 3000 1583 3000 1564 3000 1544 
3000 1524 3000 1504 3000 1484 3000 1464 3000 1444 3000 1424 3000 1405 3000 1385 3000 1365 3000 1345 
3000 1325 3000 1305 3000 1285 3000 1265 3000 1246 3000 1226 3000 1206 3000 1186 3000 1166 3000 1146 
3000 1126 3000 1106 3000 1087 3000 1067 3000 1047 3000 1027 3000 1007 3000 987 3000 967 3000 947 
3000 928 3000 908 3000 888 3000 868 3000 848 3000 828 3000 808 3000 788 3000 769 3000 749 
3000 729 3000 709 3000 689 3000 669 3000 649 3000 629 3000 610 3000 590 3000 570 3000 550 
3000 530 
] dogrey 
4 Setcolor
/absolu true def
-1 -1 200000 200000 setclipzone
%Latex:\end{picture}
 showpage

 end saved restore 


