%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox:  0 0 300 212
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 



/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
[0.5 10 div 0 0 0.5 10 div neg  0 2120 10 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
%Latex:\begin{picture}(6000,4240)(0,0)
%--use color 0 
0 Setcolor
fillsolid
[] 0 setdash
/WhiteLev 16 def
/Setgray { WhiteLev div setgray } def 
/Setcolor { WhiteLev div setgray } def 
/usecolor 0  def 
%--end use color 0 
/Times-Roman findfont 180 scf mul scalefont setfont
5 Thickness
-1 -1 200000 200000 setclipzone
fillsolid
/Times-Roman findfont 180 scf mul scalefont setfont
[] 0 setdash
fillsolid
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
fillsolid
(-0.5) 608 3936 0  0.00 [608 3765 284 170] Show
%Latex:\myput{608}{304}{18}{-0.5}
 (drawsegs) 4 [ 0]
[750 3710 750 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[975 3710 975 3741 
] dogrey 
(-0.4) 1058 3936 0  0.00 [1058 3765 284 170] Show
%Latex:\myput{1058}{304}{18}{-0.4}
 (drawsegs) 4 [ 0]
[1200 3710 1200 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[1425 3710 1425 3741 
] dogrey 
(-0.3) 1508 3936 0  0.00 [1508 3765 284 170] Show
%Latex:\myput{1508}{304}{18}{-0.3}
 (drawsegs) 4 [ 0]
[1650 3710 1650 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[1875 3710 1875 3741 
] dogrey 
(-0.2) 1958 3936 0  0.00 [1958 3765 284 170] Show
%Latex:\myput{1958}{304}{18}{-0.2}
 (drawsegs) 4 [ 0]
[2100 3710 2100 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[2325 3710 2325 3741 
] dogrey 
(-0.1) 2408 3936 0  0.00 [2408 3765 284 170] Show
%Latex:\myput{2408}{304}{18}{-0.1}
 (drawsegs) 4 [ 0]
[2550 3710 2550 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[2775 3710 2775 3741 
] dogrey 
(0) 2955 3936 0  0.00 [2955 3765 90 170] Show
%Latex:\myput{2955}{304}{18}{0}
 (drawsegs) 4 [ 0]
[3000 3710 3000 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[3225 3710 3225 3741 
] dogrey 
(0.1) 3338 3936 0  0.00 [3338 3765 225 170] Show
%Latex:\myput{3338}{304}{18}{0.1}
 (drawsegs) 4 [ 0]
[3450 3710 3450 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[3675 3710 3675 3741 
] dogrey 
(0.2) 3788 3936 0  0.00 [3788 3765 225 170] Show
%Latex:\myput{3788}{304}{18}{0.2}
 (drawsegs) 4 [ 0]
[3900 3710 3900 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[4125 3710 4125 3741 
] dogrey 
(0.3) 4238 3936 0  0.00 [4238 3765 225 170] Show
%Latex:\myput{4238}{304}{18}{0.3}
 (drawsegs) 4 [ 0]
[4350 3710 4350 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[4575 3710 4575 3741 
] dogrey 
(0.4) 4688 3936 0  0.00 [4688 3765 225 170] Show
%Latex:\myput{4688}{304}{18}{0.4}
 (drawsegs) 4 [ 0]
[4800 3710 4800 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[5025 3710 5025 3741 
] dogrey 
(0.5) 5138 3936 0  0.00 [5138 3765 225 170] Show
%Latex:\myput{5138}{304}{18}{0.5}
 (drawsegs) 4 [ 0]
[5250 3710 5250 3773 
] dogrey 
(0) 588 3775 0  0.00 [588 3604 90 170] Show
%Latex:\myput{588}{465}{18}{0}
 (drawsegs) 4 [ 0]
[750 3710 690 3710 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3551 720 3551 
] dogrey 
(0.1) 453 3457 0  0.00 [453 3286 225 170] Show
%Latex:\myput{453}{783}{18}{0.1}
 (drawsegs) 4 [ 0]
[750 3392 690 3392 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3233 720 3233 
] dogrey 
(0.2) 453 3139 0  0.00 [453 2968 225 170] Show
%Latex:\myput{453}{1101}{18}{0.2}
 (drawsegs) 4 [ 0]
[750 3074 690 3074 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2915 720 2915 
] dogrey 
(0.3) 453 2821 0  0.00 [453 2650 225 170] Show
%Latex:\myput{453}{1419}{18}{0.3}
 (drawsegs) 4 [ 0]
[750 2756 690 2756 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2597 720 2597 
] dogrey 
(0.4) 453 2503 0  0.00 [453 2332 225 170] Show
%Latex:\myput{453}{1737}{18}{0.4}
 (drawsegs) 4 [ 0]
[750 2438 690 2438 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2279 720 2279 
] dogrey 
(0.5) 453 2185 0  0.00 [453 2014 225 170] Show
%Latex:\myput{453}{2055}{18}{0.5}
 (drawsegs) 4 [ 0]
[750 2120 690 2120 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1961 720 1961 
] dogrey 
(0.6) 453 1867 0  0.00 [453 1696 225 170] Show
%Latex:\myput{453}{2373}{18}{0.6}
 (drawsegs) 4 [ 0]
[750 1802 690 1802 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1643 720 1643 
] dogrey 
(0.7) 453 1549 0  0.00 [453 1378 225 170] Show
%Latex:\myput{453}{2691}{18}{0.7}
 (drawsegs) 4 [ 0]
[750 1484 690 1484 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1325 720 1325 
] dogrey 
(0.8) 453 1231 0  0.00 [453 1060 225 170] Show
%Latex:\myput{453}{3009}{18}{0.8}
 (drawsegs) 4 [ 0]
[750 1166 690 1166 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1007 720 1007 
] dogrey 
(0.9) 453 913 0  0.00 [453 742 225 170] Show
%Latex:\myput{453}{3327}{18}{0.9}
 (drawsegs) 4 [ 0]
[750 848 690 848 
] dogrey 
 (drawsegs) 4 [ 0]
[750 689 720 689 
] dogrey 
(1.0) 453 595 0  0.00 [453 424 225 170] Show
%Latex:\myput{453}{3645}{18}{1.0}
 (drawsegs) 4 [ 0]
[750 530 690 530 
] dogrey 
[] 0 setdash
fillsolid
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
 (drawpoly) 2002 [ 0]
[750 3710 755 3700 759 3690 764 3680 768 3670 773 3660 777 3650 782 3640 786 3631 791 3621 
795 3611 800 3601 804 3592 809 3582 813 3573 818 3564 822 3554 827 3545 831 3536 836 3527 
840 3518 845 3509 849 3501 854 3492 858 3484 863 3476 867 3468 872 3460 876 3452 881 3444 
885 3437 890 3429 894 3422 898 3415 903 3408 907 3402 912 3395 916 3389 921 3383 925 3377 
930 3372 934 3366 939 3361 943 3356 948 3351 952 3347 957 3342 961 3338 966 3334 970 3331 
975 3327 979 3324 984 3321 988 3318 993 3316 997 3314 1002 3312 1006 3310 1011 3308 1015 3307 
1020 3306 1024 3305 1029 3305 1034 3305 1038 3305 1043 3305 1047 3305 1052 3306 1056 3307 1061 3308 
1065 3310 1070 3312 1074 3314 1079 3316 1083 3318 1088 3321 1092 3324 1097 3327 1101 3331 1106 3335 
1110 3339 1115 3343 1119 3347 1124 3352 1128 3357 1133 3362 1137 3367 1142 3373 1146 3379 1151 3385 
1155 3391 1160 3398 1164 3404 1169 3411 1173 3418 1178 3425 1182 3433 1186 3440 1191 3448 1195 3456 
1200 3464 1204 3473 1209 3481 1213 3490 1218 3499 1222 3508 1227 3517 1231 3526 1236 3535 1240 3545 
1245 3554 1249 3564 1254 3574 1258 3584 1263 3594 1267 3604 1272 3615 1276 3625 1281 3635 1285 3646 
1290 3656 1294 3667 1299 3678 1303 3688 1308 3699 1313 3710 1317 3699 1322 3688 1326 3677 1331 3667 
1335 3656 1340 3645 1344 3634 1349 3623 1353 3612 1358 3602 1362 3591 1367 3580 1371 3569 1376 3559 
1380 3548 1385 3538 1389 3527 1394 3517 1398 3507 1403 3497 1407 3487 1412 3477 1416 3467 1421 3457 
1425 3448 1430 3438 1434 3429 1439 3420 1443 3411 1448 3402 1452 3393 1457 3385 1461 3377 1466 3368 
1470 3360 1474 3353 1479 3345 1483 3338 1488 3331 1492 3324 1497 3317 1501 3310 1506 3304 1510 3298 
1515 3292 1519 3287 1524 3281 1528 3276 1533 3271 1537 3267 1542 3262 1546 3258 1551 3254 1555 3251 
1560 3248 1564 3245 1569 3242 1573 3239 1578 3237 1582 3235 1587 3234 1591 3232 1596 3231 1601 3231 
1605 3230 1610 3230 1614 3230 1619 3231 1623 3232 1628 3233 1632 3234 1637 3236 1641 3238 1646 3240 
1650 3243 1655 3246 1659 3249 1664 3252 1668 3256 1673 3260 1677 3265 1682 3269 1686 3274 1691 3280 
1695 3285 1700 3291 1704 3297 1709 3304 1713 3311 1718 3318 1722 3325 1727 3332 1731 3340 1736 3348 
1740 3357 1745 3366 1749 3374 1754 3384 1758 3393 1762 3403 1767 3413 1771 3423 1776 3433 1780 3444 
1785 3455 1789 3466 1794 3477 1798 3489 1803 3500 1807 3512 1812 3524 1816 3537 1821 3549 1825 3562 
1830 3574 1834 3587 1839 3600 1843 3614 1848 3627 1852 3641 1857 3654 1861 3668 1866 3682 1870 3696 
1875 3710 1880 3696 1884 3682 1889 3667 1893 3653 1898 3638 1902 3624 1907 3609 1911 3595 1916 3580 
1920 3566 1925 3551 1929 3536 1934 3522 1938 3507 1943 3493 1947 3478 1952 3464 1956 3449 1961 3435 
1965 3420 1970 3406 1974 3392 1978 3378 1983 3364 1987 3350 1992 3337 1996 3323 2001 3310 2005 3296 
2010 3283 2014 3270 2019 3257 2024 3245 2028 3232 2033 3220 2037 3208 2042 3196 2046 3185 2051 3173 
2055 3162 2060 3152 2064 3141 2069 3131 2073 3121 2078 3111 2082 3102 2087 3092 2091 3084 2096 3075 
2100 3067 2105 3059 2109 3051 2114 3044 2118 3037 2122 3031 2127 3025 2131 3019 2136 3014 2140 3009 
2145 3004 2149 3000 2154 2996 2159 2993 2163 2990 2168 2987 2172 2985 2177 2984 2181 2982 2186 2982 
2190 2981 2195 2981 2199 2982 2204 2983 2208 2985 2213 2986 2217 2989 2222 2992 2226 2995 2231 2999 
2235 3003 2240 3008 2244 3014 2249 3019 2253 3026 2258 3033 2262 3040 2266 3048 2271 3056 2275 3065 
2280 3074 2284 3084 2289 3094 2293 3105 2298 3117 2303 3128 2307 3141 2312 3154 2316 3167 2321 3181 
2325 3195 2330 3210 2334 3226 2339 3241 2343 3258 2348 3275 2352 3292 2357 3310 2361 3328 2366 3347 
2370 3366 2375 3386 2379 3406 2384 3427 2388 3448 2393 3470 2397 3492 2402 3514 2406 3537 2410 3561 
2415 3585 2419 3609 2424 3633 2428 3659 2433 3684 2438 3710 2442 3684 2447 3657 2451 3630 2456 3602 
2460 3575 2465 3546 2469 3518 2474 3489 2478 3460 2483 3430 2487 3400 2492 3370 2496 3340 2501 3309 
2505 3278 2510 3247 2514 3215 2519 3183 2523 3151 2528 3119 2532 3086 2537 3053 2541 3020 2546 2987 
2550 2954 2555 2920 2559 2887 2564 2853 2568 2819 2573 2785 2577 2750 2582 2716 2586 2681 2591 2647 
2595 2612 2600 2577 2604 2543 2609 2508 2613 2473 2618 2438 2622 2403 2627 2368 2631 2333 2636 2299 
2640 2264 2645 2229 2649 2194 2654 2160 2658 2125 2663 2091 2667 2056 2672 2022 2676 1988 2681 1954 
2685 1920 2690 1886 2694 1853 2699 1820 2703 1787 2708 1754 2712 1721 2717 1689 2721 1656 2726 1624 
2730 1593 2735 1561 2739 1530 2744 1500 2748 1469 2753 1439 2757 1409 2762 1380 2766 1351 2771 1322 
2775 1293 2780 1265 2784 1238 2789 1211 2793 1184 2798 1157 2802 1131 2807 1106 2811 1081 2816 1056 
2820 1032 2825 1009 2829 985 2834 963 2838 941 2843 919 2847 898 2852 877 2856 857 2861 838 
2865 819 2870 800 2874 782 2879 765 2883 748 2888 732 2892 717 2897 702 2901 687 2906 673 
2910 660 2915 648 2919 636 2924 624 2928 614 2933 604 2937 594 2942 585 2946 577 2951 570 
2955 563 2960 557 2964 551 2969 546 2973 542 2978 538 2982 535 2987 533 2991 531 2996 530 
3000 530 3005 530 3009 531 3014 533 3018 535 3023 538 3027 542 3032 546 3036 551 3041 557 
3045 563 3050 570 3054 577 3059 585 3063 594 3068 604 3072 614 3077 624 3081 636 3086 648 
3090 660 3095 673 3099 687 3104 702 3108 717 3113 732 3117 748 3122 765 3126 782 3131 800 
3135 819 3140 838 3144 857 3149 877 3153 898 3158 919 3162 941 3167 963 3171 985 3176 1009 
3180 1032 3185 1056 3189 1081 3194 1106 3198 1131 3203 1157 3207 1184 3212 1211 3216 1238 3221 1265 
3225 1293 3230 1322 3234 1351 3239 1380 3243 1409 3248 1439 3252 1469 3257 1500 3261 1530 3266 1561 
3270 1593 3275 1624 3279 1656 3284 1689 3288 1721 3293 1754 3297 1787 3302 1820 3306 1853 3311 1886 
3315 1920 3320 1954 3324 1988 3329 2022 3333 2056 3338 2091 3342 2125 3347 2160 3351 2194 3356 2229 
3360 2264 3365 2299 3369 2333 3374 2368 3378 2403 3383 2438 3387 2473 3392 2508 3396 2543 3401 2577 
3405 2612 3410 2647 3414 2681 3419 2716 3423 2750 3428 2785 3432 2819 3437 2853 3441 2887 3446 2920 
3450 2954 3455 2987 3459 3020 3464 3053 3468 3086 3473 3119 3477 3151 3482 3183 3486 3215 3491 3247 
3495 3278 3500 3309 3504 3340 3509 3370 3513 3400 3518 3430 3522 3460 3527 3489 3531 3518 3536 3546 
3540 3575 3545 3602 3549 3630 3554 3657 3558 3684 3563 3710 3567 3684 3572 3659 3576 3633 3581 3609 
3585 3585 3590 3561 3594 3537 3599 3514 3603 3492 3608 3470 3612 3448 3617 3427 3621 3406 3626 3386 
3630 3366 3635 3347 3639 3328 3644 3310 3648 3292 3653 3275 3657 3258 3662 3241 3666 3226 3671 3210 
3675 3195 3680 3181 3684 3167 3689 3154 3693 3141 3698 3128 3702 3117 3707 3105 3711 3094 3716 3084 
3720 3074 3725 3065 3729 3056 3734 3048 3738 3040 3743 3033 3747 3026 3752 3019 3756 3014 3761 3008 
3765 3003 3770 2999 3774 2995 3779 2992 3783 2989 3788 2986 3792 2985 3797 2983 3801 2982 3806 2981 
3810 2981 3815 2982 3819 2982 3824 2984 3828 2985 3833 2987 3837 2990 3842 2993 3846 2996 3851 3000 
3855 3004 3860 3009 3864 3014 3869 3019 3873 3025 3878 3031 3882 3037 3887 3044 3891 3051 3896 3059 
3900 3067 3905 3075 3909 3084 3914 3092 3918 3102 3923 3111 3927 3121 3932 3131 3936 3141 3941 3152 
3945 3162 3950 3173 3954 3185 3959 3196 3963 3208 3968 3220 3972 3232 3977 3245 3981 3257 3986 3270 
3990 3283 3995 3296 3999 3310 4004 3323 4008 3337 4013 3350 4017 3364 4022 3378 4026 3392 4031 3406 
4035 3420 4040 3435 4044 3449 4049 3464 4053 3478 4058 3493 4062 3507 4067 3522 4071 3536 4076 3551 
4080 3566 4085 3580 4089 3595 4094 3609 4098 3624 4103 3638 4107 3653 4112 3667 4116 3682 4121 3696 
4125 3710 4130 3696 4134 3682 4139 3668 4143 3654 4148 3641 4152 3627 4157 3614 4161 3600 4166 3587 
4170 3574 4175 3562 4179 3549 4184 3537 4188 3524 4193 3512 4197 3500 4202 3489 4206 3477 4211 3466 
4215 3455 4220 3444 4224 3433 4229 3423 4233 3413 4238 3403 4242 3393 4247 3384 4251 3374 4256 3366 
4260 3357 4265 3348 4269 3340 4274 3332 4278 3325 4283 3318 4287 3311 4292 3304 4296 3297 4301 3291 
4305 3285 4310 3280 4314 3274 4319 3269 4323 3265 4328 3260 4332 3256 4337 3252 4341 3249 4346 3246 
4350 3243 4354 3240 4359 3238 4363 3236 4368 3234 4372 3233 4377 3232 4381 3231 4386 3230 4390 3230 
4395 3230 4399 3231 4404 3231 4409 3232 4413 3234 4418 3235 4422 3237 4427 3239 4431 3242 4436 3245 
4440 3248 4445 3251 4449 3254 4454 3258 4458 3262 4463 3267 4467 3271 4472 3276 4476 3281 4481 3287 
4485 3292 4490 3298 4494 3304 4499 3310 4503 3317 4508 3324 4512 3331 4517 3338 4521 3345 4526 3353 
4530 3360 4535 3368 4539 3377 4544 3385 4548 3393 4553 3402 4557 3411 4562 3420 4566 3429 4571 3438 
4575 3448 4580 3457 4584 3467 4589 3477 4593 3487 4598 3497 4602 3507 4607 3517 4611 3527 4616 3538 
4620 3548 4625 3559 4629 3569 4634 3580 4638 3591 4642 3602 4647 3612 4651 3623 4656 3634 4660 3645 
4665 3656 4669 3667 4674 3677 4678 3688 4683 3699 4688 3710 4692 3699 4697 3688 4701 3678 4706 3667 
4710 3656 4715 3646 4719 3635 4724 3625 4728 3615 4733 3604 4737 3594 4742 3584 4746 3574 4751 3564 
4755 3554 4760 3545 4764 3535 4769 3526 4773 3517 4778 3508 4782 3499 4787 3490 4791 3481 4796 3473 
4800 3464 4805 3456 4809 3448 4814 3440 4818 3433 4823 3425 4827 3418 4832 3411 4836 3404 4841 3398 
4845 3391 4850 3385 4854 3379 4859 3373 4863 3367 4868 3362 4872 3357 4877 3352 4881 3347 4886 3343 
4890 3339 4895 3335 4899 3331 4904 3327 4908 3324 4913 3321 4917 3318 4922 3316 4926 3314 4930 3312 
4935 3310 4939 3308 4944 3307 4948 3306 4953 3305 4957 3305 4962 3305 4966 3305 4971 3305 4976 3305 
4980 3306 4985 3307 4989 3308 4994 3310 4998 3312 5003 3314 5007 3316 5012 3318 5016 3321 5021 3324 
5025 3327 5030 3331 5034 3334 5039 3338 5043 3342 5048 3347 5052 3351 5057 3356 5061 3361 5066 3366 
5070 3372 5075 3377 5079 3383 5084 3389 5088 3395 5093 3402 5097 3408 5102 3415 5106 3422 5111 3429 
5115 3437 5120 3444 5124 3452 5129 3460 5133 3468 5138 3476 5142 3484 5147 3492 5151 3501 5156 3509 
5160 3518 5165 3527 5169 3536 5174 3545 5178 3554 5183 3564 5187 3573 5192 3582 5196 3592 5201 3601 
5205 3611 5210 3621 5214 3631 5218 3640 5223 3650 5227 3660 5232 3670 5236 3680 5241 3690 5245 3700 
5250 3710 
] dogrey 
fillsolid
/absolu true def
[] 0 setdash
fillsolid
-1 -1 200000 200000 setclipzone
%Latex:\end{picture}
 showpage

 end saved restore 

